import { ConfigParams } from 'pip-services3-commons-node';
import { IConfigurable } from 'pip-services3-commons-node';
import { IReferences } from 'pip-services3-commons-node';
import { IReferenceable } from 'pip-services3-commons-node';
import { FilterParams } from 'pip-services3-commons-node';
import { PagingParams } from 'pip-services3-commons-node';
import { DataPage } from 'pip-services3-commons-node';
import { ICommandable } from 'pip-services3-commons-node';
import { CommandSet } from 'pip-services3-commons-node';
import { ObjectGroupV1 } from '../data/version1/ObjectGroupV1';
import { IObjectGroupsController } from './IObjectGroupsController';
export declare class ObjectGroupsController implements IConfigurable, IReferenceable, ICommandable, IObjectGroupsController {
    private static _defaultConfig;
    private _dependencyResolver;
    private _objectsClient;
    private _objectsConnector;
    private _zonesClient;
    private _zonesConnector;
    private _eventRulesClient;
    private _eventRulesConnector;
    private _persistence;
    private _commandSet;
    configure(config: ConfigParams): void;
    setReferences(references: IReferences): void;
    getCommandSet(): CommandSet;
    getGroups(correlationId: string, filter: FilterParams, paging: PagingParams, callback: (err: any, page: DataPage<ObjectGroupV1>) => void): void;
    getGroupById(correlationId: string, id: string, callback: (err: any, group: ObjectGroupV1) => void): void;
    createGroup(correlationId: string, group: ObjectGroupV1, callback: (err: any, group: ObjectGroupV1) => void): void;
    updateGroup(correlationId: string, group: ObjectGroupV1, callback: (err: any, group: ObjectGroupV1) => void): void;
    deleteGroupById(correlationId: string, id: string, callback: (err: any, group: ObjectGroupV1) => void): void;
    addObject(correlationId: string, group_id: string, object_id: string, callback: (err: any, group: ObjectGroupV1) => void): void;
    removeObject(correlationId: string, group_id: string, object_id: string, callback: (err: any, group: ObjectGroupV1) => void): void;
}
